<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.haisenberg.sys.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.haisenberg.sys.model.User" >
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
     <result column="salt" property="salt" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="INTEGER" />
  </resultMap>
  
   <resultMap id="userRolePermissionMap" type="com.haisenberg.sys.model.User" >
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="salt" property="salt" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="INTEGER" />
    	<collection property="roles" ofType="com.haisenberg.sys.model.Role">  
            <id column="role_id" property="roleId" jdbcType="INTEGER"/>  
            <result column="role_name" property="roleName" jdbcType="VARCHAR"/>  
	           	<collection property="permissions" ofType="com.haisenberg.sys.model.Permission">  
		            <id column="permission_id" property="permissionId" jdbcType="INTEGER"/>  
		            <result column="permission_name" property="permissionName" jdbcType="VARCHAR"/> 
	       		 </collection>
        </collection> 
  </resultMap>
  
  <sql id="Base_Column_List" >
    user_id, username, password, salt, age
  </sql>
    <!-- 返回一个list的写法 -->
    <select id="selectUserList"  resultMap="BaseResultMap" >
        select * from sys_user
    </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sys_user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
    <select id="selectByUserName" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from sys_user
    where username = #{username,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sys_user
    where user_id = #{userId,jdbcType=INTEGER}
    limit 1
  </delete>
  <insert id="insert" parameterType="com.haisenberg.sys.model.User" >
    insert into sys_user (user_id, username, password,salt, 
      age)
    values (#{userId,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR},
      #{age,jdbcType=INTEGER})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.haisenberg.sys.model.User" >
    update sys_user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  
     <select id="selectURPByUserName" resultMap="userRolePermissionMap" parameterType="java.lang.String" >
	    select 
	    sys_user.*,sys_role.*,sys_permission.*
	    from sys_user
	    join sys_user_role on sys_user_role.user_id=sys_user.user_id
	    join sys_role on sys_role.role_id=sys_user_role.role_id
	    join sys_permission on sys_permission.role_id=sys_permission.role_id
	    where sys_user.username = #{username,jdbcType=VARCHAR}
  	</select>
</mapper>